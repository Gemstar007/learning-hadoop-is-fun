

H:\data>pscp -P 2222 -pw 100sheets root@192.168.0.17:/root/sankalpg/files/hadoop2.6.1.0-129.hdp.centos.tar.gz ./hadoop2.6.1.0-129.hdp.centos.tar.gz


/usr/hdp/current

tar -zcvf hadoop2.6.1.0-129.hdp.centos.tar.gz /usr/hdp/2.6.1.0-129/

maven hadoop eclipe mvn 
-------

https://wiki.apache.org/hadoop/EclipseEnvironment 

mvn install -DskipTests
mvn eclipse:eclipse -DdownloadSources=true -DdownloadJavadocs=true





https://github.com/redhat-developer/vscode-java/issues/28

JAVA_HOME=C:\Program Files\Java\jdk1.8.0_144
Path=%Path%;E:\bin\protoc-3.4.0-win32\bin

https://stackoverflow.com/questions/29195269/in-the-pom-xml-for-a-java-project-i-get-missing-artifact-jdk-toolsjdk-toolsja



hortonworks cloudbreak 
-----------
https://github.com/hortonworks/cloudbreak

sequenceIq cloudbreak 
-------
https://github.com/hortonworks/cloudbreak

building 
------
http://sequenceiq.com/cloudbreak-docs/latest/shell/#fromsource

http://answers.opencv.org/question/31855/java-api-loading-image-from-any-java-inputstream/

java build tools compared
------------------
https://technologyconversations.com/2014/06/18/build-tools/

Avro java example 
----------------------
https://avro.apache.org/docs/1.7.7/gettingstartedjava.html

git clone git://git.apache.org/avro.git
#install maven using 
https://tecadmin.net/install-apache-maven-on-centos/# 

##Follow tutorial steps

Avro mr (non-hadoop) example
-=-------
https://avro.apache.org/docs/1.7.7/mr.html 
##Follow steps


Avro Mr convesrstion
--------
in classes folder do 
--
jar wcf avromr1.jar example

run the command after configuring inputs and o/ps
---
hadoop jar ./target/classes/avromr1.jar  example.MapredColorCount  -libjars /root/sankalpg/tute1/jar/avro-1.7.4.jar,/root/sankalpg/tute1/jar/avro-mapred-1.7.4-hadoop2.jar  /sankalpg/avromr1/input  /sankalpg/avromr1/output/02

------------------------------------

hdp-select status 
2.6.1.0-129

JAVA_HOME=/usr/lib/jvm/java 
-------------------------------------
JAVA_HOME=/usr/lib/jvm/java
export PATH=${JAVA_HOME}/bin:${PATH}
export HADOOP_CLASSPATH=${JAVA_HOME}/lib/tools.jar
export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:/root/sankalpg/tute1/jar/avro-1.7.4.jar:/root/sankalpg/tute1/jar/avro-mapred-1.7.4-hadoop2.jar 

export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:/root/sankalpg/learning-hadoop-is-fun/mapreduce/avro-mapred-1.8.2.jar;/root/sankalpg/learning-hadoop-is-fun/mapreduce/avro-1.8.2.jar

-----------
hadoop com.sun.tools.javac.Main WordCount.java
jar cf wc.jar WordCount*.class
--------

hdfs dfs -mkdir /user/sankalpg
hdfs dfs -mkdir /user/sankalpg/input
hdfs dfs -mkdir /user/sankalpg/output/

--------
cat >file01
cat >file02

hdfs dfs -put ./file01  /user/sankalpg/input
hdfs dfs -put ./file02  /user/sankalpg/input
----------
hadoop jar wc.jar WordCount /user/sankalpg/input /user/sankalpg/output/o1 

hdfs dfs -ls  /user/sankalpg/output/o1
hdfs dfs -cat  /user/sankalpg/output/o1/_SUCCESS
hdfs dfs -cat  /user/sankalpg/output/o1/part-r-00000

#git remote set-url origin https://yourusername@github.com/user/repo.git
git remote set-url origin https://rusticsankalp@github.com/Gemstar007/learning-hadoop-is-fun.git
git push --all origin
---------------
links
---
https://hadoop.apache.org/docs/r2.6.3/api/org/apache/hadoop/mapreduce/package-tree.html
https://hadoop.apache.org/docs/r1.2.1/mapred_tutorial.html

=======================================
wget http://apache.claz.org/avro/avro-1.8.2/java/avro-tools-1.8.2.jar
wget http://apache.claz.org/avro/avro-1.8.2/java/avro-1.8.2.jar
wget http://apache.claz.org/avro/avro-1.8.2/java/avro-mapred-1.8.2.jar

java -jar /path/to/avro-tools-1.8.1.jar compile schema user.avsc . 

install Maven
------
https://tecadmin.net/install-apache-maven-on-centos/#

cd /opt
wget http://www-eu.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
sudo tar xzf apache-maven-3.3.9-bin.tar.gz
sudo ln -s apache-maven-3.3.9 maven
sudo vi /etc/profile.d/maven.sh
   export M2_HOME=/opt/maven
   export PATH=${M2_HOME}/bin:${PATH}

source /etc/profile.d/maven.sh

mvn --version

------------
example 
https://avro.apache.org/docs/1.7.7/mr.html
----------------------------------
git clone git://git.apache.org/avro.git 
avro/doc/examples/mr-example
mvn compile 
mvn exec:java -q -Dexec.mainClass=example.GenerateData
mvn exec:java -q -Dexec.mainClass=example.MapredColorCount -Dexec.args="input output"

java -jar /root/sankalpg/learning-hadoop-is-fun/mapreduce/avro-tools-1.8.2.jar tojson output/part-00000.avro

hadoop jar ./target/classes/firstAvroMap.jar  example.MapredColorCount  /sankalpg/avro1/input/users.avro /sankalpg/avro1/out1/



hadoop jar ./target/classes/firstAvroMap.jar  example.MapredColorCount  -libjars=/root/sankalpg/learning-hadoop-is-fun/mapreduce/avro-mapred-1.8.2.jar,/root/sankalpg/learning-hadoop-is-fun/mapreduce/avro-1.8.2.jar  /sankalpg/avro1/input/users.avro /sankalpg/avro1/out1/


hadoop jar ./target/classes/firstAvroMap.jar  example.MapredColorCount  -libjars /usr/hdp/2.6.1.0-129/sqoop/lib/avro-mapred-1.8.0-hadoop2.jar,/usr/hdp/2.6.1.0-129/sqoop/lib/avro-1.8.0.jar  /sankalpg/avro1/input/ /sankalpg/avro1/out6/

hadoop jar ./target/classes/firstAvroMap.jar  example.MapredColorCount  -libjars /root/sankalpg/learning-hadoop-is-fun/mapreduce/avro-mapred-1.8.2.jar,/root/sankalpg/learning-hadoop-is-fun/mapreduce/avro-1.8.2.jar  /sankalpg/avro1/input/ /sankalpg/avro1/out6/

 ls /usr/hdp/2.6.1.0-129/sqoop/lib/
/usr/hdp/2.6.1.0-129/hadoop/lib/avro-1.7.4.jar

hadoop jar avromr1.jar  example.MapredColorCount  -libjars /root/sankalpg/tute1/jar/avro-1.7.4.jar,/root/sankalpg/tute1/jar/avro-mapred-1.7.4-hadoop2.jar  /sankalpg/avromr1/inputl  /sankalpg/avromr1/output/01
----------------

root@bubble01:~# /usr/jdk64/jdk1.8.0_112/bin/java -version
java version "1.8.0_112"
Java(TM) SE Runtime Environment (build 1.8.0_112-b15)
Java HotSpot(TM) 64-Bit Server VM (build 25.112-b15, mixed mode)

 /usr/lib/jvm/default-java/bin/java -version
openjdk version "1.8.0_131"
OpenJDK Runtime Environment (build 1.8.0_131-8u131-b11-2ubuntu1.16.04.3-b11)
OpenJDK 64-Bit Server VM (build 25.131-b11, mixed mode)
root@bubble01:~# 

tools.jar is part of java
---------------
/usr/jdk64/jdk1.8.0_112/lib/tools.jar

avro locations 
-----
root@bubble01:~# find / -name "avro-1.7.4.jar"
/var/lib/ambari-server/resources/views/work/HIVE{2.0.0}/WEB-INF/lib/avro-1.7.4.jar
/var/lib/ambari-server/resources/views/work/CAPACITY-SCHEDULER{1.0.0}/WEB-INF/lib/avro-1.7.4.jar
/var/lib/ambari-server/resources/views/work/WORKFLOW_MANAGER{1.0.0}/WEB-INF/lib/avro-1.7.4.jar
/var/lib/ambari-server/resources/views/work/TEZ{0.7.0.2.6.2.0-205}/WEB-INF/lib/avro-1.7.4.jar
/var/lib/ambari-server/resources/views/work/HIVE{1.5.0}/WEB-INF/lib/avro-1.7.4.jar
/var/lib/ambari-server/resources/views/work/HUETOAMBARI_MIGRATION{1.0.0}/WEB-INF/lib/avro-1.7.4.jar
/var/lib/ambari-server/resources/views/work/PIG{1.0.0}/WEB-INF/lib/avro-1.7.4.jar
/var/lib/ambari-server/resources/views/work/SLIDER{2.0.0}/WEB-INF/lib/avro-1.7.4.jar
/var/lib/ambari-server/resources/views/work/FILES{1.0.0}/WEB-INF/lib/avro-1.7.4.jar
/usr/hdp/2.6.2.0-205/hadoop/client/avro-1.7.4.jar
/usr/hdp/2.6.2.0-205/hadoop/lib/avro-1.7.4.jar
/usr/hdp/2.6.2.0-205/hadoop-mapreduce/lib/avro-1.7.4.jar
/usr/hdp/2.6.2.0-205/hadoop-mapreduce/avro-1.7.4.jar
/usr/hdp/2.6.2.0-205/oozie/oozie-server/webapps/oozie/WEB-INF/lib/avro-1.7.4.jar
/usr/hdp/2.6.2.0-205/oozie/libtools/avro-1.7.4.jar
/usr/hdp/2.6.2.0-205/oozie/lib/avro-1.7.4.jar
/usr/hdp/2.6.2.0-205/oozie/libserver/avro-1.7.4.jar
/usr/hdp/2.6.2.0-205/hadoop-yarn/lib/avro-1.7.4.jar
/usr/hdp/2.6.2.0-205/falcon/client/lib/avro-1.7.4.jar
/usr/hdp/2.6.2.0-205/mahout/lib/avro-1.7.4.jar
/usr/hdp/2.6.2.0-205/slider/lib/avro-1.7.4.jar
/usr/lib/ambari-server/avro-1.7.4.jar
/usr/lib/ambari-metrics-collector/avro-1.7.4.jar
/hadoop/yarn/local/filecache/10/mapreduce.tar.gz/hadoop/share/hadoop/yarn/lib/avro-1.7.4.jar
/hadoop/yarn/local/filecache/10/mapreduce.tar.gz/hadoop/share/hadoop/mapreduce/lib/avro-1.7.4.jar
/hadoop/yarn/local/filecache/10/mapreduce.tar.gz/hadoop/share/hadoop/tools/lib/avro-1.7.4.jar
/hadoop/yarn/local/filecache/10/mapreduce.tar.gz/hadoop/share/hadoop/httpfs/tomcat/webapps/webhdfs/WEB-INF/lib/avro-1.7.4.jar
/hadoop/yarn/local/filecache/10/mapreduce.tar.gz/hadoop/share/hadoop/common/lib/avro-1.7.4.jar
/hadoop/yarn/local/filecache/10/mapreduce.tar.gz/hadoop/share/hadoop/kms/tomcat/webapps/kms/WEB-INF/lib/avro-1.7.4.jar



/usr/hdp/2.6.2.0-205/hadoop-mapreduce
/usr/hdp/2.6.2.0-205/hadoop/client/

haddop has jar for aws, azure , azure-datalake 






